// import { addKeyword } from '@builderbot/bot'

// export const equipmentRequestFlow = addKeyword(['solicitar equipo', '4'])
//     .addAnswer('üñ•Ô∏è *Solicitud de Equipo Nuevo* üì±\n\n' +
//         '1Ô∏è‚É£ Computadora/Laptop\n' +
//         '2Ô∏è‚É£ Monitor\n' +
//         '3Ô∏è‚É£ Perif√©ricos (teclado, mouse, etc.)\n' +
//         '4Ô∏è‚É£ Tel√©fono m√≥vil\n' +
//         '5Ô∏è‚É£ Otro\n',
//         { capture: true },
//         async (ctx, { fallBack, state }) => {
//             const option = ctx.body.trim()
            
//             if (!['1', '2', '3', '4', '5'].includes(option)) {
//                 return fallBack('‚ùå Por favor, selecciona una opci√≥n v√°lida (1-5)')
//             }
            
//             const equipmentTypes = {
//                 '1': 'Computadora/Laptop',
//                 '2': 'Monitor',
//                 '3': 'Perif√©ricos',
//                 '4': 'Tel√©fono m√≥vil',
//                 '5': 'Otro'
//             }
            
//             await state.update({ equipmentType: equipmentTypes[option] })
//         })
//     .addAnswer('üìù Por favor, describe brevemente por qu√© necesitas este equipo:',
//         { capture: true },
//         async (ctx, { flowDynamic, state }) => {
//             const ticketNumber = Date.now().toString().slice(-6)
//             const currentState = await state.getMyState()
            
//             await flowDynamic([
//                 {
//                     body: `‚úÖ *Solicitud Registrada*\n\n` +
//                         `Ticket #${ticketNumber}\n` +
//                         `Tipo: ${currentState.equipmentType}\n` +
//                         `Justificaci√≥n: ${ctx.body}\n\n` +
//                         `Tu solicitud ser√° revisada por el departamento de IT.\n` +
//                         `Te notificaremos cuando haya una actualizaci√≥n.`
//                 }
//             ])
//         })
